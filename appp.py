# import numpy as np
# from flask import Flask, request, jsonify, render_template
# from sklearn.preprocessing import LabelEncoder
# import pickle

# # Create flask app
# flask_app = Flask(__name__)
# model = pickle.load(open("lgb_tuned_model.pkl", "rb"))


# @flask_app.route("/")
# def Home():
#     return render_template("index.html")


# @flask_app.route("/predict", methods=["POST"])
# def predict():
#     EngineVersion = request.form['EngineVersion']
#     error = None

#     if not EngineVersion or not EngineVersion.strip():
#         error = 'EngineVersion is missing'

#     print(f"EngineVersion: {EngineVersion}")
    
#     features_all = [x for x in request.form.values()]


#     # Initialize the LabelEncoder
#     encoder = LabelEncoder()

#     # Fit and transform the data
#     encoded_features = encoder.fit_transform(features_all)
#     features = [np.array(encoded_features)]

#     #float_features = [float(x) for x in request.form.values()]
#     #features = [np.array(float_features)]
#     prediction = model.predict(features)
#     if (prediction == 1):
        
#         return render_template("index.html", prediction_text="Your machine is highly susceptible to malware.")
#     else:
#         return render_template("index.html", prediction_text="Your machine free from malware.")


# if __name__ == "__main__":
#     flask_app.run(debug=True)
